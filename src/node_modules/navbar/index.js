module.exports = navbar

const path = require('path')
const cwd = process.cwd()
const prefix = path.relative(cwd, __dirname)


const icon_button = require('buttons/icon_button')
const logo_button = require('buttons/logo_button')
const text_button = require('buttons/text_button')
const my_theme = require('my_theme')


// CSS Boiler Plat
const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)


function navbar(){

    // Assigning all the icons
    const { img_src: { 
        icon_consortium = `${prefix}/icon_consortium_page.png`,
        icon_blogger = `${prefix}/icon_blogger.png`,
        icon_discord = `${prefix}/icon_discord.png`,
        icon_twitter = `${prefix}/icon_twitter.png`,
        icon_github = `${prefix}/icon_github.png`,
        icon_terminal = `${prefix}/icon_terminal.png`,
        icon_theme = `${prefix}/icon_theme.png`,
        icon_arrow_down = `${prefix}/icon_arrow_down.svg`,
        icon_arrow_up = `${prefix}/icon_arrow_up.svg`
    } } = my_theme
    

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode:'closed'})

    const navbar = document.createElement('div')
    navbar.classList.add('navbar')

    shadow.innerHTML = `
    <div class="navbar_wrapper">
        <div class="navbar">
            <div class="nav_toggle_wrapper"></div>
            <div class="page_btns_wrapper"></div>
            <div class="icon_btn_wrapper"></div>
        </div>
    </div>
    <style>${get_theme()}</style>
  `


    
    // sm nav buttons
    const consortium_btn = icon_button({src:icon_consortium})
    const logo_btn = logo_button()
    logo_btn.classList.add('logo_btn')
    
    // icon_consortium_page.png
    // adding nav toggle button
    const nav_toggle_btn = icon_button({ src: icon_arrow_down, src_active: icon_arrow_up });
    nav_toggle_btn.classList.add('nav_toggle_btn');

    // Change the src value of icon_button after it is declared
    nav_toggle_btn.src = icon_arrow_up;

    nav_toggle_btn.addEventListener('click', function() {
        shadow.querySelector('.navbar').classList.toggle('active');
    });


    const nav_toggle_wrapper = shadow.querySelector('.nav_toggle_wrapper')
    nav_toggle_wrapper.append(consortium_btn, logo_btn, nav_toggle_btn)





    // Page List Buttons
    const text_btns = [
        { element: text_button({ text: 'HOME' }) },
        { element: text_button({ text: 'PROJECTS' }) },
        { element: text_button({ text: 'GROWTH PROGRAM' }) },
        { element: text_button({ text: 'TIMELINE' }) }
    ] 
    for (const button_data of text_btns) {
        const { element } = button_data
        element.classList.add('text_button')
    }
    const page_btns_wrapper = shadow.querySelector('.page_btns_wrapper')
    page_btns_wrapper.append(...text_btns.map(button_data => button_data.element))





    // Adding social and action buttons
    const icon_btns = [
        {element: icon_button({src:icon_blogger}) },
        {element: icon_button({src:icon_discord}) },
        {element: icon_button({src:icon_twitter}) },
        {element: icon_button({src:icon_github}) },
        {element: icon_button({src:icon_terminal}) },
        {element: icon_button({src:icon_theme}) }
    ] 
    for (const button_data of icon_btns) {
        const { element } = button_data
        element.classList.add('icon_btn')
    }
    const icon_btn_wrapper = shadow.querySelector('.icon_btn_wrapper')
    icon_btn_wrapper.append(...icon_btns.map(button_data => button_data.element))





    // shadow.append(navbar)
    shadow.adoptedStyleSheets = [sheet]
    return el

}


function get_theme(){
    return`
        :host{ 
            --white: white;
            --ac-1: #2ACA4B;
            --ac-2: #F9A5E4;
            --ac-3: #88559D;
            --ac-4: #293648;
        }
        .navbar_wrapper{
            container-type: inline-size;
            position: fixed;
            top:0px;
            left:0px;
            z-index: 10;
            width: 100%;
        }
        .navbar{
            display: block;
            width:100%;
            height:40px;
            overflow:hidden;
            border-bottom: 1px solid var(--ac-4);

            --s: 20px; /* control the size */
            --_g: #EEECE9 /* first color */ 0 25%, #0000 0 50%;
            background:
                repeating-conic-gradient(at 33% 33%,var(--_g)),
                repeating-conic-gradient(at 66% 66%,var(--_g)),
                #777674;  /* second color */ 
            background-size: var(--s) var(--s);                   
        }
        .navbar.active{
            height:max-content;
        }


        /* Starting buttons wrapper */
        .nav_toggle_wrapper{
            display: flex;
            width:100%;
            justify-content:stretch;
        }
        .nav_toggle_wrapper .logo_btn{
            width:100% !important;
            flex-grow:1;
        }
        .page_btns_wrapper{
            width:100%;
            display:flex;
            flex-direction:column;
        }
        .page_btns_wrapper .text_button{
            width:100%;
            flex-grow:1;
        }
        .icon_btn_wrapper{
            display:flex;
            justify-content:flex-start;
            // grid-template-columns: repeat(6, 2fr)
        }










        .page_list{
            display: none;
        }

        @container(min-width: 899px) {

            .navbar{
                display: flex;
            }

            .nav_toggle_wrapper{
                width:max-content;
                display:flex;
            }
            .nav_toggle_wrapper .logo_btn{
                width: max-content !important;
            }
            .page_list{
                display:flex;
            }

            .nav_toggle_wrapper .nav_toggle_btn{
                display: none;
            }
            .page_btns_wrapper{
                flex-direction: row;
            }
            .page_btns_wrapper .text_button{
                width:max-content !important;
                flex-grow: unset;
            }
        }
        
        .socials_list{
            display: flex;
        }
    `
}
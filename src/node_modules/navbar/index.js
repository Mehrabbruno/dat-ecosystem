module.exports = navbar

const icon_button = require('buttons/icon_button')
const logo_button = require('buttons/logo_button')
const text_button = require('buttons/text_button')

function navbar(){
    // CSS Boiler Plat
    const sheet = new CSSStyleSheet
    const theme = get_theme()
    sheet.replaceSync(theme)

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode:'closed'})

    const navbar = document.createElement('div')
    navbar.classList.add('navbar')

    shadow.innerHTML = `
    <div class="navbar_wrapper">
        <div class="navbar">
            <div class="nav_toggle_wrapper"></div>
            <div class="page_btns_wrapper"></div>
            <div class="icon_btn_wrapper"></div>
        </div>
    </div>
    <style>${get_theme()}</style>
  `


    
    // Nav Toggle Buttons
    const consortium_btn = icon_button({src:'terminal_icon.png'})
    const logo_btn = logo_button()
    logo_btn.classList.add('logo_btn')
    const filter_btn = icon_button({src:'terminal_icon.png'})
    filter_btn.classList.add('filter_btn')

    const nav_toggle_wrapper = shadow.querySelector('.nav_toggle_wrapper');
    nav_toggle_wrapper.append(consortium_btn, logo_btn, filter_btn);





    // Page List Buttons
    const text_btns = [
        { text: 'HOME', element: text_button({ text: 'HOME' }) },
        { text: 'PROJECTS', element: text_button({ text: 'PROJECTS' }) },
        { text: 'GROWTH PROGRAM', element: text_button({ text: 'GROWTH PROGRAM' }) },
        { text: 'TIMELINE', element: text_button({ text: 'TIMELINE' }) }
    ]; 
    for (const button_data of text_btns) {
        const { element } = button_data;
        element.classList.add('text_button');
    }
    const page_btns_wrapper = shadow.querySelector('.page_btns_wrapper');
    page_btns_wrapper.append(...text_btns.map(button_data => button_data.element));





    // Adding social and action buttons
    const icon_btns = [
        { src: 'terminal_icon.png', element: icon_button({src:'terminal_icon.png'}) },
        { src: 'terminal_icon.png', element: icon_button({src:'terminal_icon.png'}) },
        { src: 'terminal_icon.png', element: icon_button({src:'terminal_icon.png'}) },
        { src: 'terminal_icon.png', element: icon_button({src:'terminal_icon.png'}) },
        { src: 'terminal_icon.png', element: icon_button({src:'terminal_icon.png'}) },
        { src: 'terminal_icon.png', element: icon_button({src:'terminal_icon.png'}) }
    ]; 
    for (const button_data of icon_btns) {
        const { element } = button_data;
        element.classList.add('icon_btn');
    }
    const icon_btn_wrapper = shadow.querySelector('.icon_btn_wrapper');
    icon_btn_wrapper.append(...icon_btns.map(button_data => button_data.element));





    // shadow.append(navbar)
    shadow.adoptedStyleSheets = [sheet]
    return el

    function get_theme(){
        return`
            :host{ 
                --white: white;
                --ac-1: #2ACA4B;
                --ac-2: #F9A5E4;
                --ac-3: #88559D;
                --ac-4: #293648;
            }
            .navbar_wrapper{
                container-type: inline-size;
            }
            .navbar{
                display: block;
                width:100%;
                height:40px;
                overflow:hidden;
                border-bottom: 1px solid var(--ac-4);

                // background-color: #EEECE9;
                // opacity: 0.8;
                // background: repeating-linear-gradient( -45deg, #777674, #777674 9px, #EEECE9 9px, #EEECE9 45px );

                --s: 20px; /* control the size */
                --_g: #EEECE9 /* first color */ 0 25%, #0000 0 50%;
                background:
                    repeating-conic-gradient(at 33% 33%,var(--_g)),
                    repeating-conic-gradient(at 66% 66%,var(--_g)),
                    #777674;  /* second color */ 
                background-size: var(--s) var(--s);                   
            }
            .navbar.active{
                height:max-content;
            }


            /* Starting buttons wrapper */
            .nav_toggle_wrapper{
                display: flex;
                width:100%;
                justify-content:stretch;
            }
            .nav_toggle_wrapper .logo_btn{
                width:100% !important;
                flex-grow:1;
            }
            .page_btns_wrapper{
                width:100%;
                display:flex;
                flex-direction:column;
            }
            .page_btns_wrapper .text_button{
                width:100%;
                flex-grow:1;
            }
            .icon_btn_wrapper{
                display:flex;
                justify-content:flex-start;
                // grid-template-columns: repeat(6, 2fr)
            }










            .page_list{
                display: none;
            }

            @container(min-width: 856px) {

                .navbar{
                    display: flex;
                }

                .nav_toggle_wrapper{
                    width:max-content;
                    display:flex;
                }
                .nav_toggle_wrapper .logo_btn{
                    width: max-content !important;
                }
                .page_list{
                    display:flex;
                }

                .nav_toggle_wrapper .filter_btn{
                    display: none;
                }
                .page_btns_wrapper{
                    flex-direction: row;
                }
                .page_btns_wrapper .text_button{
                    width:max-content !important;
                    flex-grow: unset;
                }
            }
            
            .socials_list{
                display: flex;
            }
        `
    }
}
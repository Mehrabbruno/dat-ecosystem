
module.exports = sm_icon_button_alt

// CSS Boiler Plat
const sheet = new CSSStyleSheet
const theme = get_theme()
sheet.replaceSync(theme)


var id = 0


// opts - icon/img src
function sm_icon_button_alt (opts, protocol) {
    
    const name = `sm_icon_button_alt_${id++}`
    let {src, src_active} = opts

    const el = document.createElement('div')
    const shadow = el.attachShadow({mode:'closed'})

    const sm_icon_button_alt = document.createElement('div')
    sm_icon_button_alt.classList.add('sm_icon_button_alt')
    
    const icon = document.createElement('img')
    icon.src = src
    sm_icon_button_alt.append(icon)

    // Toggle Icon
    // if(src_active){
    //     let active_state = true;
    //     sm_icon_button_alt.onclick = (e) =>{
    //         ;(active_state)?icon.src = src_active: icon.src = src
    //         active_state = !active_state
    //         toggle_class(e)
    //     }
    // }else{
    //     // Toggle Class
    //     sm_icon_button_alt.onclick = (e) => toggle_class(e)
    // }

    if (protocol) { 
        const send = protocol({from:name}, listen) 
        function listen (message) {

        }
        let active_state = true;

        sm_icon_button_alt.onclick = (e) => {
            // Toggle Icon
            if(src_active){
                
                ;(active_state)?icon.src = src_active: icon.src = src
                active_state = !active_state
                console.log(active_state)
                
                toggle_class(e)

            }else{
                toggle_class(e)
            }

            send({
                head: {
                    by: name,
                    to: 'window_bar_0',
                    mid: 0,
                },
                type: 'toggle_window_active_state', 
                data: {active_state : active_state} 
            })
        }
    }


    

    const style = document.createElement('style')
    style.textContent = get_theme()

    shadow.append(sm_icon_button_alt, style)
    shadow.adoptedStyleSheets = [sheet]
    return el
}



function get_theme(){
    return`
        .sm_icon_button_alt{
            display:flex;
            justify-content: center;
            align-items:center;
            height:30px;
            box-sizing:border-box;
            aspect-ratio:1/1;
            cursor:pointer;
            border: 1px solid var(--bg_color);
            // border-left: var(--bg_color);
            background-color: var(--primary_color);
        }
        .sm_icon_button_alt img{
            height: 20px;
            width: 20px;
            pointer-events:none;
        }
        .sm_icon_button_alt.active{
            background-color: var(--ac-2)
        }
    `
}



function toggle_class(e){
    let selector = e.target.classList
    ;( selector.contains('active') ) ? selector.remove('active') : selector.add('active')
}